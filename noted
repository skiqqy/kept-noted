#!/bin/bash
# Defaults
workdir="$HOME/Documents/noted"

### Start Helper Functions ###
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[92m'
NC='\033[0m'
error () {
	printf "[${RED}ERROR${NC}] $1\n"
	exit $2
}

warning () {
	printf "[${YELLOW}WARNING${NC}] $1\n"
}

success () {
	printf "[${GREEN}SUCCESS${NC}] $1\n"
}

tick () {
	printf "$1 ${GREEN}âœ”${NC}\n"
}

sq () {
	echo $(sed -e 's/^"//' -e 's/"$//' <<< $1)
}

# Upload a file
upload () {
	echo "[UPLOADING] $1"
	route="$domain/upload/note"
	content=$(cat $1)
	fname=$(basename $1)
	curl -s -X POST -F "nic=$nic" -F "key=$privkey" -F "fname=$fname" -F "content=$content" $route
}

# Download a file
download () {
	route="$domain/download/note"
	content=$(cat $1)
	fname=$(basename $1)
	echo $(curl -s -X POST -F "nic=$nic" -F "key=$privkey" -F "fname=$fname" $route)
}
### End Helper Functions ###

# Begin
if [ ! -d $workdir ]
then
	mkdir $workdir
fi

if [ ! -f "$workdir/.key" ]
then
	cat << EOF > "$workdir/.key"
nic=<your_nickname>
key=<your_key>
domain=http://localhost:5000
EOF
	error ".key file missing, generating \'$workdir/.key\'... Please fill it out."
fi

while IFS== read -r key val
do
	if [ $key = 'key' ]
	then
		privkey=$val
	elif [ $key = 'nic' ]
	then
		nic=$val
	else
		domain=$val
	fi
done < "$workdir/.key"

# Update local copies
for f in $workdir/*
do
	ret=$(download $f)
	code=$(echo $ret | jq '.status')
	if [ $code -eq 0 ]
	then
		data=$(echo $ret | jq '.data')
		fname=$(echo $data | jq '.fname')
		content=$(echo $data | jq '.content')

		fname=$(sq "$fname")
		content=$(sq "$content")

		echo -en $content > $workdir/$fname
	fi
done


height=$(ls -1 $workdir | wc -l)
height=$(echo $height + 1 | bc)
file=$(echo -e "NEW\n$(ls -1 $workdir)" | dmenu -l "$height" -p "Files:")
if [ $? -eq 1 ]
then
	exit 0
fi

if [ $file = "NEW" ]
then
	file=$(echo "" | dmenu -p "Enter Filename:")
fi

if [ $? -eq 1 ]
then
	exit 0
fi
file="$workdir/$file"
touch "$file"

height=$(wc -l "$file" | awk '{print $1}')
prompt="Add/delete a task: "

# Loop Credit too https://tools.suckless.org/dmenu/scripts/todo
cmd=$(dmenu -l "$height" -p "$prompt" "$@" < "$file")
while [ -n "$cmd" ]; do
 	if grep -q "^$cmd\$" "$file"; then
		grep -v "^$cmd\$" "$file" > "$file.$$"
		mv "$file.$$" "$file"
        height=$(( height - 1 ))
 	else
		echo "$cmd" >> "$file"
		height=$(( height + 1 ))
 	fi

	cmd=$(dmenu -l "$height" -p "$prompt" "$@" < "$file")
done
### End Suckless

# Update
# TODO: Only upload files that changed.
for f in "$workdir/*"
do
	upload $f
done
